# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../reference/asm_thumb2_label_branch.rst:2
msgid "Branch instructions"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:4
msgid ""
"These cause execution to jump to a target location usually specified by a"
" label (see the ``label`` assembler directive). Conditional branches and "
"the ``it`` and ``ite`` instructions test the Application Program Status "
"Register (APSR) N (negative), Z (zero), C (carry) and V (overflow) flags "
"to determine whether the branch should be executed."
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:9
msgid ""
"Most of the exposed assembler instructions (including move operations) "
"set the flags but there are explicit comparison instructions to enable "
"values to be tested."
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:12
msgid ""
"Further detail on the meaning of the condition flags is provided in the "
"section describing comparison functions."
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:16
msgid "Document conventions"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:18
msgid ""
"Notation: ``Rm`` denotes ARM registers R0-R15. ``LABEL`` denotes a label "
"defined with the ``label()`` assembler directive. ``<condition>`` "
"indicates one of the following condition specifiers:"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:22
msgid "eq Equal to (result was zero)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:23
msgid "ne Not equal"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:24
msgid "cs Carry set"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:25
msgid "cc Carry clear"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:26
msgid "mi Minus (negative)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:27
msgid "pl Plus (positive)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:28
msgid "vs Overflow set"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:29
msgid "vc Overflow clear"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:30
msgid "hi > (unsigned comparison)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:31
msgid "ls <= (unsigned comparison)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:32
msgid "ge >= (signed comparison)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:33
msgid "lt < (signed comparison)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:34
msgid "gt > (signed comparison)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:35
msgid "le <= (signed comparison)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:38
msgid "Branch to label"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:40
msgid "b(LABEL) Unconditional branch"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:41
msgid "beq(LABEL) branch if equal"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:42
msgid "bne(LABEL) branch if not equal"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:43
msgid "bge(LABEL) branch if greater than or equal"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:44
msgid "bgt(LABEL) branch if greater than"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:45
msgid "blt(LABEL) branch if less than (<) (signed)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:46
msgid "ble(LABEL) branch if less than or equal to (<=) (signed)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:47
msgid "bcs(LABEL) branch if carry flag is set"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:48
msgid "bcc(LABEL) branch if carry flag is clear"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:49
msgid "bmi(LABEL) branch if negative"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:50
msgid "bpl(LABEL) branch if positive"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:51
msgid "bvs(LABEL) branch if overflow flag set"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:52
msgid "bvc(LABEL) branch if overflow flag is clear"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:53
msgid "bhi(LABEL) branch if higher (unsigned)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:54
msgid "bls(LABEL) branch if lower or equal (unsigned)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:57
msgid "Long branches"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:59
msgid ""
"The code produced by the branch instructions listed above uses a fixed "
"bit width to specify the branch destination, which is PC relative. "
"Consequently in long programs where the branch instruction is remote from"
" its destination the assembler will produce a \"branch not in range\" "
"error. This can be overcome with the \"wide\" variants such as"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:64
msgid "beq\\_w(LABEL) long branch if equal"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:66
msgid ""
"Wide branches use 4 bytes to encode the instruction (compared with 2 "
"bytes for standard branch instructions)."
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:69
msgid "Subroutines (functions)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:71
msgid ""
"When entering a subroutine the processor stores the return address in "
"register r14, also known as the link register (lr). Return to the "
"instruction after the subroutine call is performed by updating the "
"program counter (r15 or pc) from the link register, This process is "
"handled by the following instructions."
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:76
msgid "bl(LABEL)"
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:78
msgid ""
"Transfer execution to the instruction after ``LABEL`` storing the return "
"address in the link register (r14)."
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:81
msgid "bx(Rm) Branch to address specified by Rm."
msgstr ""

#: ../../reference/asm_thumb2_label_branch.rst:83
msgid ""
"Typically ``bx(lr)`` is issued to return from a subroutine. For nested "
"subroutines the link register of outer scopes must be saved (usually on "
"the stack) before performing inner subroutine calls."
msgstr ""

