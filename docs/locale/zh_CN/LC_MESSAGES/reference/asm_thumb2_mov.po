# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../reference/asm_thumb2_mov.rst:2
msgid "Register move instructions"
msgstr ""

#: ../../reference/asm_thumb2_mov.rst:5
msgid "Document conventions"
msgstr ""

#: ../../reference/asm_thumb2_mov.rst:7
msgid ""
"Notation: ``Rd, Rn`` denote ARM registers R0-R15. ``immN`` denotes an "
"immediate value having a width of N bits. These instructions affect the "
"condition flags."
msgstr ""

#: ../../reference/asm_thumb2_mov.rst:11
msgid "Register moves"
msgstr ""

#: ../../reference/asm_thumb2_mov.rst:13
msgid ""
"Where immediate values are used, these are zero-extended to 32 bits. Thus"
" ``mov(R0, 0xff)`` will set R0 to 255."
msgstr ""

#: ../../reference/asm_thumb2_mov.rst:16
msgid "mov(Rd, imm8) ``Rd = imm8``"
msgstr ""

#: ../../reference/asm_thumb2_mov.rst:17
msgid "mov(Rd, Rn) ``Rd = Rn``"
msgstr ""

#: ../../reference/asm_thumb2_mov.rst:18
msgid "movw(Rd, imm16) ``Rd = imm16``"
msgstr ""

#: ../../reference/asm_thumb2_mov.rst:19
msgid "movt(Rd, imm16) ``Rd = (Rd & 0xffff) | (imm16 << 16)``"
msgstr ""

#: ../../reference/asm_thumb2_mov.rst:21
msgid ""
"movt writes an immediate value to the top halfword of the destination "
"register. It does not affect the contents of the bottom halfword."
msgstr ""

#: ../../reference/asm_thumb2_mov.rst:24
msgid "movwt(Rd, imm32) ``Rd = imm32``"
msgstr ""

#: ../../reference/asm_thumb2_mov.rst:26
msgid ""
"movwt is a pseudo-instruction: the MicroPython assembler emits a ``movw``"
" followed by a ``movt`` to move a 32-bit value into Rd."
msgstr ""

