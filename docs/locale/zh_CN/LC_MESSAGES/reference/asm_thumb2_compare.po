# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../reference/asm_thumb2_compare.rst:2
#: ../../reference/asm_thumb2_compare.rst:49
msgid "Comparison instructions"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:4
msgid ""
"These perform an arithmetic or logical instruction on two arguments, "
"discarding the result but setting the condition flags. Typically these "
"are used to test data values without changing them prior to executing a "
"conditional branch."
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:9
msgid "Document conventions"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:11
msgid ""
"Notation: ``Rd, Rm, Rn`` denote ARM registers R0-R7. ``imm8`` denotes an "
"immediate value having a width of 8 bits."
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:15
msgid "The Application Program Status Register (APSR)"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:17
msgid ""
"This contains four bits which are tested by the conditional branch "
"instructions. Typically a conditional branch will test multiple bits, for"
" example ``bge(LABEL)``. The meaning of condition codes can depend on "
"whether the operands of an arithmetic instruction are viewed as signed or"
" unsigned integers. Thus ``bhi(LABEL)`` assumes unsigned numbers were "
"processed while ``bgt(LABEL)`` assumes signed operands."
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:24
msgid "APSR Bits"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:26
msgid "Z (zero)"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:28
msgid ""
"This is set if the result of an operation is zero or the operands of a "
"comparison are equal."
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:30
msgid "N (negative)"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:32
msgid "Set if the result is negative."
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:34
msgid "C (carry)"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:36
msgid ""
"An addition sets the carry flag when the result overflows out of the MSB,"
" for example adding 0x80000000 and 0x80000000. By the nature of two's "
"complement arithmetic this behaviour is reversed on subtraction, with a "
"borrow indicated by the carry bit being clear. Thus 0x10 - 0x01 is "
"executed as 0x10 + 0xffffffff which will set the carry bit."
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:41
msgid "V (overflow)"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:43
msgid ""
"The overflow flag is set if the result, viewed as a two's compliment "
"number, has the \"wrong\" sign in relation to the operands. For example "
"adding 1 to 0x7fffffff will set the overflow bit because the result "
"(0x8000000), viewed as a two's complement integer, is negative. Note that"
" in this instance the carry bit is not set."
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:51
msgid ""
"These set the APSR (Application Program Status Register) N (negative), Z "
"(zero), C (carry) and V (overflow) flags."
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:54
msgid "cmp(Rn, imm8) ``Rn - imm8``"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:55
msgid "cmp(Rn, Rm) ``Rn - Rm``"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:56
msgid "cmn(Rn, Rm) ``Rn + Rm``"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:57
msgid "tst(Rn, Rm) ``Rn & Rm``"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:60
msgid "Conditional execution"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:62
msgid ""
"The ``it`` and ``ite`` instructions provide a means of conditionally "
"executing from one to four subsequent instructions without the need for a"
" label."
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:65
msgid "it(<condition>) If then"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:67
msgid "Execute the next instruction if <condition> is true:"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:76
msgid "ite(<condition>) If then else"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:78
msgid ""
"If <condtion> is true, execute the next instruction, otherwise execute "
"the subsequent one. Thus:"
msgstr ""

#: ../../reference/asm_thumb2_compare.rst:89
msgid ""
"This may be extended to control the execution of upto four subsequent "
"instructions: it[x[y[z]]] where x,y,z=t/e; e.g. itt, itee, itete, ittte, "
"itttt, iteee, etc."
msgstr ""

