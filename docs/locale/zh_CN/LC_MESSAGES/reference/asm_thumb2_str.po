# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../reference/asm_thumb2_str.rst:2
msgid "Store register to memory"
msgstr ""

#: ../../reference/asm_thumb2_str.rst:5
msgid "Document conventions"
msgstr ""

#: ../../reference/asm_thumb2_str.rst:7
msgid ""
"Notation: ``Rt, Rn`` denote ARM registers R0-R7 except where stated. "
"``immN`` represents an immediate value having a width of N bits hence "
"``imm5`` is constrained to the range 0-31. ``[Rn + imm5]`` is the "
"contents of the memory address obtained by adding Rn and the offset "
"``imm5``. Offsets are measured in bytes. These instructions do not affect"
" the condition flags."
msgstr ""

#: ../../reference/asm_thumb2_str.rst:13
msgid "Register Store"
msgstr ""

#: ../../reference/asm_thumb2_str.rst:15
msgid "str(Rt, [Rn, imm7]) ``[Rn + imm7] = Rt`` Store a 32 bit word"
msgstr ""

#: ../../reference/asm_thumb2_str.rst:16
msgid "strb(Rt, [Rn, imm5]) ``[Rn + imm5] = Rt`` Store a byte (b0-b7)"
msgstr ""

#: ../../reference/asm_thumb2_str.rst:17
msgid ""
"strh(Rt, [Rn, imm6]) ``[Rn + imm6] = Rt`` Store a 16 bit half word "
"(b0-b15)"
msgstr ""

#: ../../reference/asm_thumb2_str.rst:19
msgid ""
"The specified immediate offsets are measured in bytes. Hence in the case "
"of ``str`` the 7 bit value enables 32 bit word aligned values to be "
"accessed with a maximum offset of 31 words. In the case of ``strh`` the 6"
" bit value enables 16 bit half-word aligned values to be accessed with a "
"maximum offset of 31 half-words."
msgstr ""

