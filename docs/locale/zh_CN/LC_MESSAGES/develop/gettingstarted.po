# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../develop/gettingstarted.rst:4
msgid "Getting Started"
msgstr ""

#: ../../develop/gettingstarted.rst:6
msgid ""
"This guide covers a step-by-step process on setting up version control, "
"obtaining and building a copy of the source code for a port, building the"
" documentation, running tests, and a description of the directory "
"structure of the MicroPython code base."
msgstr ""

#: ../../develop/gettingstarted.rst:11
msgid "Source control with git"
msgstr ""

#: ../../develop/gettingstarted.rst:13
msgid ""
"MicroPython is hosted on `GitHub "
"<https://github.com/micropython/micropython>`_ and uses `Git <https"
"://git-scm.com>`_ for source control. The workflow is such that code is "
"pulled and pushed to and from the main repository. Install the respective"
" version of Git for your operating system to follow through the rest of "
"the steps."
msgstr ""

#: ../../develop/gettingstarted.rst:19
msgid ""
"For a reference on the installation instructions, please refer to the "
"`Git installation instructions <https://git-scm.com/book/en/v2/Getting-"
"Started-Installing-Git>`_. Learn about the basic git commands in this "
"`Git Handbook <https://guides.github.com/introduction/git-handbook/>`_ or"
" any other sources on the internet."
msgstr ""

#: ../../develop/gettingstarted.rst:25
msgid ""
"A .git-blame-ignore-revs file is included which avoids the output of git "
"blame getting cluttered by commits which are only for formatting code but"
" have no functional changes. See `git blame documentation <https://git-"
"scm.com/docs/git-blame#Documentation/git-blame.txt---ignore-revltrevgt>`_"
" on how to use this."
msgstr ""

#: ../../develop/gettingstarted.rst:30
msgid "Get the code"
msgstr ""

#: ../../develop/gettingstarted.rst:32
msgid ""
"It is recommended that you maintain a fork of the MicroPython repository "
"for your development purposes. The process of obtaining the source code "
"includes the following:"
msgstr ""

#: ../../develop/gettingstarted.rst:35
msgid "Fork the repository https://github.com/micropython/micropython"
msgstr ""

#: ../../develop/gettingstarted.rst:36
msgid ""
"You will now have a fork at <https://github.com/<your-user-"
"name>/micropython>."
msgstr ""

#: ../../develop/gettingstarted.rst:37
msgid "Clone the forked repository using the following command:"
msgstr ""

#: ../../develop/gettingstarted.rst:43
msgid ""
"Then, `configure the remote repositories <https://git-scm.com/book/en/v2"
"/Git-Basics-Working-with-Remotes>`_ to be able to collaborate on the "
"MicroPython project."
msgstr ""

#: ../../develop/gettingstarted.rst:46
msgid "Configure remote upstream:"
msgstr ""

#: ../../develop/gettingstarted.rst:53
msgid ""
"It is common to configure ``upstream`` and ``origin`` on a forked "
"repository to assist with sharing code changes. You can maintain your own"
" mapping but it is recommended that ``origin`` maps to your fork and "
"``upstream`` to the main MicroPython repository."
msgstr ""

#: ../../develop/gettingstarted.rst:58
msgid "After the above configuration, your setup should be similar to this:"
msgstr ""

#: ../../develop/gettingstarted.rst:68
msgid ""
"You should now have a copy of the source code. By default, you are "
"pointing to the master branch. To prepare for further development, it is "
"recommended to work on a development branch."
msgstr ""

#: ../../develop/gettingstarted.rst:76
msgid ""
"You can give it any name. You will have to compile MicroPython whenever "
"you change to a different branch."
msgstr ""

#: ../../develop/gettingstarted.rst:80
msgid "Compile and build the code"
msgstr ""

#: ../../develop/gettingstarted.rst:82
msgid ""
"When compiling MicroPython, you compile a specific :term:`port`, usually "
"targeting a specific :ref:`board <glossary>`. Start by installing the "
"required dependencies. Then build the MicroPython cross-compiler before "
"you can successfully compile and build. This applies specifically when "
"using Linux to compile. The Windows instructions are provided in a later "
"section."
msgstr ""

#: ../../develop/gettingstarted.rst:91
msgid "Required dependencies"
msgstr ""

#: ../../develop/gettingstarted.rst:93
msgid "Install the required dependencies for Linux:"
msgstr ""

#: ../../develop/gettingstarted.rst:99
msgid "For the stm32 port, the ARM cross-compiler is required:"
msgstr ""

#: ../../develop/gettingstarted.rst:105
msgid ""
"See the `ARM GCC toolchain <https://developer.arm.com/tools-and-software"
"/open-source-software/developer-tools/gnu-toolchain/gnu-rm>`_ for the "
"latest details."
msgstr ""

#: ../../develop/gettingstarted.rst:109
msgid ""
"Python is also required. Python 2 is supported for now, but we recommend "
"using Python 3. Check that you have Python available on your system:"
msgstr ""

#: ../../develop/gettingstarted.rst:120
msgid ""
"All supported ports have different dependency requirements, see their "
"respective `readme files "
"<https://github.com/micropython/micropython/tree/master/ports>`_."
msgstr ""

#: ../../develop/gettingstarted.rst:124
msgid "Building the MicroPython cross-compiler"
msgstr ""

#: ../../develop/gettingstarted.rst:126
msgid ""
"Almost all ports require building ``mpy-cross`` first to perform pre-"
"compilation of Python code that will be included in the port firmware:"
msgstr ""

#: ../../develop/gettingstarted.rst:135
msgid ""
"Note that, ``mpy-cross`` must be built for the host architecture and not "
"the target architecture."
msgstr ""

#: ../../develop/gettingstarted.rst:138
msgid "If it built successfully, you should see a message similar to this:"
msgstr ""

#: ../../develop/gettingstarted.rst:148
msgid ""
"Use ``make -C mpy-cross`` to build the cross-compiler in one statement "
"without moving to the ``mpy-cross`` directory otherwise, you will need to"
" do ``cd ..`` for the next steps."
msgstr ""

#: ../../develop/gettingstarted.rst:153
msgid "Building the Unix port of MicroPython"
msgstr ""

#: ../../develop/gettingstarted.rst:155
msgid ""
"The Unix port is a version of MicroPython that runs on Linux, macOS, and "
"other Unix-like operating systems. It's extremely useful for developing "
"MicroPython as it avoids having to deploy your code to a device to test "
"it. In many ways, it works a lot like CPython's python binary."
msgstr ""

#: ../../develop/gettingstarted.rst:159
msgid ""
"To build for the Unix port, make sure all Linux related dependencies are "
"installed as detailed in the required dependencies section. See the "
":ref:`required_dependencies` to make sure that all dependencies are "
"installed for this port. Also, make sure you have a working environment "
"for ``gcc`` and ``GNU make``. Ubuntu 20.04 has been used for the example "
"below but other unixes ought to work with little modification:"
msgstr ""

#: ../../develop/gettingstarted.rst:179
msgid "If MicroPython built correctly, you should see the following:"
msgstr ""

#: ../../develop/gettingstarted.rst:187
msgid "Now run it:"
msgstr ""

#: ../../develop/gettingstarted.rst:199
msgid "Building the Windows port"
msgstr ""

#: ../../develop/gettingstarted.rst:201
msgid ""
"The Windows port includes a Visual Studio project file "
"micropython.vcxproj that you can use to build micropython.exe. It can be "
"opened in Visual Studio or built from the command line using msbuild. "
"Alternatively, it can be built using mingw, either in Windows with "
"Cygwin, or on Linux. See `windows port documentation "
"<https://github.com/micropython/micropython/tree/master/ports/windows>`_ "
"for more information."
msgstr ""

#: ../../develop/gettingstarted.rst:207
msgid "Building the STM32 port"
msgstr ""

#: ../../develop/gettingstarted.rst:209
msgid ""
"Like the Unix port, you need to install some required dependencies as "
"detailed in the :ref:`required_dependencies` section, then build:"
msgstr ""

#: ../../develop/gettingstarted.rst:218
msgid ""
"Please refer to the `stm32 documentation "
"<https://github.com/micropython/micropython/tree/master/ports/stm32>`_ "
"for more details on flashing the firmware."
msgstr ""

#: ../../develop/gettingstarted.rst:222
msgid ""
"See the :ref:`required_dependencies` to make sure that all dependencies "
"are installed for this port. The cross-compiler is needed. ``arm-none-"
"eabi-gcc`` should also be in the $PATH or specified manually via "
"CROSS_COMPILE, either by setting the environment variable or in the "
"``make`` command line arguments."
msgstr ""

#: ../../develop/gettingstarted.rst:226
msgid "You can also specify which board to use:"
msgstr ""

#: ../../develop/gettingstarted.rst:234
msgid ""
"See `ports/stm32/boards "
"<https://github.com/micropython/micropython/tree/master/ports/stm32/boards>`_"
" for the available boards. e.g. \"PYBV11\" or \"NUCLEO_WB55\"."
msgstr ""

#: ../../develop/gettingstarted.rst:238
msgid "Building the documentation"
msgstr ""

#: ../../develop/gettingstarted.rst:240
msgid ""
"MicroPython documentation is created using ``Sphinx``. If you have "
"already installed Python, then install ``Sphinx`` using ``pip``. It is "
"recommended that you use a virtual environment:"
msgstr ""

#: ../../develop/gettingstarted.rst:250
msgid "Navigate to the ``docs`` directory:"
msgstr ""

#: ../../develop/gettingstarted.rst:256
msgid "Build the docs:"
msgstr ""

#: ../../develop/gettingstarted.rst:262
msgid ""
"Open ``docs/build/html/index.html`` in your browser to view the docs "
"locally. Refer to the documentation on `importing your documentation "
"<https://docs.readthedocs.io/en/stable/intro/import-guide.html>`_ to use "
"Read the Docs."
msgstr ""

#: ../../develop/gettingstarted.rst:267
msgid "Running the tests"
msgstr ""

#: ../../develop/gettingstarted.rst:269
msgid "To run all tests in the test suite on the Unix port use:"
msgstr ""

#: ../../develop/gettingstarted.rst:276
msgid "To run a selection of tests on a board/device connected over USB use:"
msgstr ""

#: ../../develop/gettingstarted.rst:283
msgid "See also :ref:`writingtests`."
msgstr ""

#: ../../develop/gettingstarted.rst:286
msgid "Folder structure"
msgstr ""

#: ../../develop/gettingstarted.rst:288
msgid ""
"There are a couple of directories to take note of in terms of where "
"certain implementation details are. The following is a break down of the "
"top-level folders in the source code."
msgstr ""

#: ../../develop/gettingstarted.rst:291
msgid "py"
msgstr ""

#: ../../develop/gettingstarted.rst:293
msgid "Contains the compiler, runtime, and core library implementation."
msgstr ""

#: ../../develop/gettingstarted.rst:295
msgid "mpy-cross"
msgstr ""

#: ../../develop/gettingstarted.rst:297
msgid ""
"Has the MicroPython cross-compiler which pre-compiles the Python scripts "
"to bytecode."
msgstr ""

#: ../../develop/gettingstarted.rst:299
msgid "ports"
msgstr ""

#: ../../develop/gettingstarted.rst:301
msgid "Code for all the versions of MicroPython for the supported ports."
msgstr ""

#: ../../develop/gettingstarted.rst:303
msgid "lib"
msgstr ""

#: ../../develop/gettingstarted.rst:305
msgid ""
"Low-level C libraries used by any port which are mostly 3rd-party "
"libraries."
msgstr ""

#: ../../develop/gettingstarted.rst:307
msgid "drivers"
msgstr ""

#: ../../develop/gettingstarted.rst:309
msgid ""
"Has drivers for specific hardware and intended to work across multiple "
"ports."
msgstr ""

#: ../../develop/gettingstarted.rst:311
msgid "extmod"
msgstr ""

#: ../../develop/gettingstarted.rst:313
msgid "Contains a C implementation of more non-core modules."
msgstr ""

#: ../../develop/gettingstarted.rst:315
msgid "docs"
msgstr ""

#: ../../develop/gettingstarted.rst:317
msgid "Has the standard documentation found at https://docs.micropython.org/."
msgstr ""

#: ../../develop/gettingstarted.rst:319
msgid "tests"
msgstr ""

#: ../../develop/gettingstarted.rst:321
msgid "An implementation of the test suite."
msgstr ""

#: ../../develop/gettingstarted.rst:323
msgid "tools"
msgstr ""

#: ../../develop/gettingstarted.rst:325
msgid ""
"Contains helper tools including the ``upip`` and the ``pyboard.py`` "
"module."
msgstr ""

#: ../../develop/gettingstarted.rst:327
msgid "examples"
msgstr ""

#: ../../develop/gettingstarted.rst:329
msgid ""
"Example code for building MicroPython as a library as well as native "
"modules."
msgstr ""

