# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../esp32/tutorial/peripheral_access.rst:2
msgid "Accessing peripherals directly via registers"
msgstr ""

#: ../../esp32/tutorial/peripheral_access.rst:4
msgid ""
"The ESP32's peripherals can be controlled via direct register reads and "
"writes. This requires reading the datasheet to know what registers to use"
" and what values to write to them.  The following example shows how to "
"turn on and change the prescaler of the MCPWM0 peripheral."
msgstr ""

#: ../../esp32/tutorial/peripheral_access.rst:35
msgid ""
"Note that before a peripheral can be used its clock must be enabled and "
"it must be taken out of reset.  In the above example the following "
"registers are used for this:"
msgstr ""

#: ../../esp32/tutorial/peripheral_access.rst:39
msgid "``DPORT_PERI_CLK_EN_REG``: used to enable a peripheral clock"
msgstr ""

#: ../../esp32/tutorial/peripheral_access.rst:41
msgid ""
"``DPORT_PERI_RST_EN_REG``: used to reset (or take out of reset) a "
"peripheral"
msgstr ""

#: ../../esp32/tutorial/peripheral_access.rst:43
msgid ""
"The MCPWM0 peripheral is in bit position 17 of the above two registers, "
"hence the value of ``DPORT_PWM0_CLK_EN``."
msgstr ""

