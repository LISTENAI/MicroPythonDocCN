# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../esp32/tutorial/intro.rst:4
msgid "Getting started with MicroPython on the ESP32"
msgstr ""

#: ../../esp32/tutorial/intro.rst:6
msgid ""
"Using MicroPython is a great way to get the most of your ESP32 board.  "
"And vice versa, the ESP32 chip is a great platform for using MicroPython."
"  This tutorial will guide you through setting up MicroPython, getting a "
"prompt, using WebREPL, connecting to the network and communicating with "
"the Internet, using the hardware peripherals, and controlling some "
"external components."
msgstr ""

#: ../../esp32/tutorial/intro.rst:12
msgid "Let's get started!"
msgstr ""

#: ../../esp32/tutorial/intro.rst:15
msgid "Requirements"
msgstr ""

#: ../../esp32/tutorial/intro.rst:17
msgid ""
"The first thing you need is a board with an ESP32 chip.  The MicroPython "
"software supports the ESP32 chip itself and any board should work.  The "
"main characteristic of a board is how the GPIO pins are connected to the "
"outside world, and whether it includes a built-in USB-serial convertor to"
" make the UART available to your PC."
msgstr ""

#: ../../esp32/tutorial/intro.rst:23
msgid ""
"Names of pins will be given in this tutorial using the chip names (eg "
"GPIO2) and it should be straightforward to find which pin this "
"corresponds to on your particular board."
msgstr ""

#: ../../esp32/tutorial/intro.rst:28
msgid "Powering the board"
msgstr ""

#: ../../esp32/tutorial/intro.rst:30
msgid ""
"If your board has a USB connector on it then most likely it is powered "
"through this when connected to your PC.  Otherwise you will need to power"
" it directly. Please refer to the documentation for your board for "
"further details."
msgstr ""

#: ../../esp32/tutorial/intro.rst:35
msgid "Getting the firmware"
msgstr ""

#: ../../esp32/tutorial/intro.rst:37
msgid ""
"The first thing you need to do is download the most recent MicroPython "
"firmware .bin file to load onto your ESP32 device. You can download it "
"from the `MicroPython downloads page "
"<https://micropython.org/download#esp32>`_. From here, you have 3 main "
"choices:"
msgstr ""

#: ../../esp32/tutorial/intro.rst:42
msgid "Stable firmware builds"
msgstr ""

#: ../../esp32/tutorial/intro.rst:43
msgid "Daily firmware builds"
msgstr ""

#: ../../esp32/tutorial/intro.rst:44
msgid "Daily firmware builds with SPIRAM support"
msgstr ""

#: ../../esp32/tutorial/intro.rst:46
msgid ""
"If you are just starting with MicroPython, the best bet is to go for the "
"Stable firmware builds. If you are an advanced, experienced MicroPython "
"ESP32 user who would like to follow development closely and help with "
"testing new features, there are daily builds.  If your board has SPIRAM "
"support you can use either the standard firmware or the firmware with "
"SPIRAM support, and in the latter case you will have access to more RAM "
"for Python objects."
msgstr ""

#: ../../esp32/tutorial/intro.rst:54
msgid "Deploying the firmware"
msgstr ""

#: ../../esp32/tutorial/intro.rst:56
msgid ""
"Once you have the MicroPython firmware you need to load it onto your "
"ESP32 device. There are two main steps to do this: first you need to put "
"your device in bootloader mode, and second you need to copy across the "
"firmware.  The exact procedure for these steps is highly dependent on the"
" particular board and you will need to refer to its documentation for "
"details."
msgstr ""

#: ../../esp32/tutorial/intro.rst:62
msgid ""
"Fortunately, most boards have a USB connector, a USB-serial convertor, "
"and the DTR and RTS pins wired in a special way then deploying the "
"firmware should be easy as all steps can be done automatically.  Boards "
"that have such features include the Adafruit Feather HUZZAH32, M5Stack, "
"Wemos LOLIN32, and TinyPICO boards, along with the Espressif DevKitC, "
"PICO-KIT, WROVER-KIT dev-kits."
msgstr ""

#: ../../esp32/tutorial/intro.rst:68
msgid ""
"For best results it is recommended to first erase the entire flash of "
"your device before putting on new MicroPython firmware."
msgstr ""

#: ../../esp32/tutorial/intro.rst:71
msgid ""
"Currently we only support esptool.py to copy across the firmware.  You "
"can find this tool here: `<https://github.com/espressif/esptool/>`__, or "
"install it using pip::"
msgstr ""

#: ../../esp32/tutorial/intro.rst:77
msgid ""
"Versions starting with 1.3 support both Python 2.7 and Python 3.4 (or "
"newer). An older version (at least 1.2.1 is needed) works fine but will "
"require Python 2.7."
msgstr ""

#: ../../esp32/tutorial/intro.rst:81
msgid "Using esptool.py you can erase the flash with the command::"
msgstr ""

#: ../../esp32/tutorial/intro.rst:85
msgid "And then deploy the new firmware using::"
msgstr ""

#: ../../esp32/tutorial/intro.rst:89
msgid "Notes:"
msgstr ""

#: ../../esp32/tutorial/intro.rst:91
msgid ""
"You might need to change the \"port\" setting to something else relevant "
"for your PC"
msgstr ""

#: ../../esp32/tutorial/intro.rst:93
msgid ""
"You may need to reduce the baudrate if you get errors when flashing (eg "
"down to 115200 by adding ``--baud 115200`` into the command)"
msgstr ""

#: ../../esp32/tutorial/intro.rst:95
msgid ""
"For some boards with a particular FlashROM configuration you may need to "
"change the flash mode (eg by adding ``-fm dio`` into the command)"
msgstr ""

#: ../../esp32/tutorial/intro.rst:97
msgid "The filename of the firmware should match the file that you have"
msgstr ""

#: ../../esp32/tutorial/intro.rst:99
msgid ""
"If the above commands run without error then MicroPython should be "
"installed on your board!"
msgstr ""

#: ../../esp32/tutorial/intro.rst:103
msgid "Serial prompt"
msgstr ""

#: ../../esp32/tutorial/intro.rst:105
msgid ""
"Once you have the firmware on the device you can access the REPL (Python "
"prompt) over UART0 (GPIO1=TX, GPIO3=RX), which might be connected to a "
"USB-serial convertor, depending on your board.  The baudrate is 115200."
msgstr ""

#: ../../esp32/tutorial/intro.rst:109
msgid ""
"From here you can now follow the ESP8266 tutorial, because these two "
"Espressif chips are very similar when it comes to using MicroPython on "
"them.  The ESP8266 tutorial is found at :ref:`esp8266_tutorial` (but skip"
" the Introduction section)."
msgstr ""

#: ../../esp32/tutorial/intro.rst:114
msgid "Troubleshooting installation problems"
msgstr ""

#: ../../esp32/tutorial/intro.rst:116
msgid ""
"If you experience problems during flashing or with running firmware "
"immediately after it, here are troubleshooting recommendations:"
msgstr ""

#: ../../esp32/tutorial/intro.rst:119
msgid ""
"Be aware of and try to exclude hardware problems.  There are 2 common "
"problems: bad power source quality, and worn-out/defective FlashROM. "
"Speaking of power source, not just raw amperage is important, but also "
"low ripple and noise/EMI in general.  The most reliable and convenient "
"power source is a USB port."
msgstr ""

#: ../../esp32/tutorial/intro.rst:125
msgid ""
"The flashing instructions above use flashing speed of 460800 baud, which "
"is good compromise between speed and stability. However, depending on "
"your module/board, USB-UART convertor, cables, host OS, etc., the above "
"baud rate may be too high and lead to errors. Try a more common 115200 "
"baud rate instead in such cases."
msgstr ""

#: ../../esp32/tutorial/intro.rst:131
msgid ""
"To catch incorrect flash content (e.g. from a defective sector on a "
"chip), add ``--verify`` switch to the commands above."
msgstr ""

#: ../../esp32/tutorial/intro.rst:134
msgid ""
"If you still experience problems with flashing the firmware please refer "
"to esptool.py project page, https://github.com/espressif/esptool for "
"additional documentation and a bug tracker where you can report problems."
msgstr ""

#: ../../esp32/tutorial/intro.rst:138
msgid ""
"If you are able to flash the firmware but the ``--verify`` option returns"
" errors even after multiple retries the you may have a defective FlashROM"
" chip."
msgstr ""

