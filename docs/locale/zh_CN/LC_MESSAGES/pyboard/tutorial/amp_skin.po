# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pyboard/tutorial/amp_skin.rst:2
msgid "The AMP audio skin"
msgstr ""

#: ../../pyboard/tutorial/amp_skin.rst:4
msgid "Soldering and using the AMP audio skin."
msgstr ""

msgid "AMP skin"
msgstr ""

#: ../../pyboard/tutorial/amp_skin.rst:14
msgid ""
"The following video shows how to solder the headers, microphone and "
"speaker onto the AMP skin."
msgstr ""

#: ../../pyboard/tutorial/amp_skin.rst:20
msgid ""
"For circuit schematics and datasheets for the components on the skin see "
":ref:`hardware_index`."
msgstr ""

#: ../../pyboard/tutorial/amp_skin.rst:23
msgid "Example code"
msgstr ""

#: ../../pyboard/tutorial/amp_skin.rst:25
msgid ""
"The AMP skin has a speaker which is connected to ``DAC(1)`` via a small "
"power amplifier.  The volume of the amplifier is controlled by a digital "
"potentiometer, which is an I2C device with address 46 on the ``IC2(1)`` "
"bus."
msgstr ""

#: ../../pyboard/tutorial/amp_skin.rst:29
msgid "To set the volume, define the following function::"
msgstr ""

#: ../../pyboard/tutorial/amp_skin.rst:35
#: ../../pyboard/tutorial/amp_skin.rst:64
msgid "Then you can do::"
msgstr ""

#: ../../pyboard/tutorial/amp_skin.rst:40
msgid ""
"To play a sound, use the ``write_timed`` method of the ``DAC`` object. "
"For example::"
msgstr ""

#: ../../pyboard/tutorial/amp_skin.rst:55
msgid ""
"You can also play WAV files using the Python ``wave`` module.  You can "
"get the wave module `here "
"<http://micropython.org/resources/examples/wave.py>`__ and you will also "
"need the chunk module available `here "
"<http://micropython.org/resources/examples/chunk.py>`__.  Put these on "
"your pyboard (either on the flash or the SD card in the top-level "
"directory).  You will need an 8-bit WAV file to play, such as `this one "
"<http://micropython.org/resources/examples/test.wav>`_, or to convert any"
" file you have with the command::"
msgstr ""

#: ../../pyboard/tutorial/amp_skin.rst:72
msgid ""
"This should play the WAV file. Note that this will read the whole file "
"into RAM so it has to be small enough to fit in it."
msgstr ""

#: ../../pyboard/tutorial/amp_skin.rst:75
msgid ""
"To play larger wave files you will have to use the micro-SD card to store"
" it. Also the file must be read and sent to the DAC in small chunks that "
"will fit the RAM limit of the microcontroller.  Here is an example "
"function that can play 8-bit wave files with up to 16kHz sampling::"
msgstr ""

#: ../../pyboard/tutorial/amp_skin.rst:95
msgid ""
"This function reads one second worth of data and sends it to DAC.  It "
"then waits one second and moves the file cursor to the new position to "
"read the next second of data in the next iteration of the for-loop.  It "
"plays one second of audio at a time every one second."
msgstr ""

