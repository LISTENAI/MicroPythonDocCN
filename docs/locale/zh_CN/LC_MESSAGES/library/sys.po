# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../library/sys.rst:2
msgid ":mod:`sys` -- system specific functions"
msgstr ""

#: ../../library/sys.rst:7
msgid "|see_cpython_module| :mod:`python:sys`."
msgstr ""

#: ../../library/sys.rst:10
msgid "Functions"
msgstr ""

#: ../../library/sys.rst:14
msgid ""
"Terminate current program with a given exit code. Underlyingly, this "
"function raise as `SystemExit` exception. If an argument is given, its "
"value given as an argument to `SystemExit`."
msgstr ""

#: ../../library/sys.rst:20
msgid ""
"Register *func* to be called upon termination.  *func* must be a callable"
" that takes no arguments, or ``None`` to disable the call.  The "
"``atexit`` function will return the previous value set by this function, "
"which is initially ``None``."
msgstr ""

#: ../../library/sys.rst:25 ../../library/sys.rst:36 ../../library/sys.rst:78
#: ../../library/sys.rst:118 ../../library/sys.rst:155
msgid "Difference to CPython"
msgstr ""

#: ../../library/sys.rst:28
msgid ""
"This function is a MicroPython extension intended to provide similar "
"functionality to the :mod:`atexit` module in CPython."
msgstr ""

#: ../../library/sys.rst:33
msgid ""
"Print exception with a traceback to a file-like object *file* (or "
"`sys.stdout` by default)."
msgstr ""

#: ../../library/sys.rst:39
msgid ""
"This is simplified version of a function which appears in the "
"``traceback`` module in CPython. Unlike ``traceback.print_exception()``, "
"this function takes just exception value instead of exception type, "
"exception value, and traceback object; *file* argument should be "
"positional; further arguments are not supported. CPython-compatible "
"``traceback`` module can be found in `micropython-lib`."
msgstr ""

#: ../../library/sys.rst:48
msgid ""
"Enable tracing of bytecode execution.  For details see the `CPython "
"documentaion <https://docs.python.org/3/library/sys.html#sys.settrace>`_."
msgstr ""

#: ../../library/sys.rst:51
msgid ""
"This function requires a custom MicroPython build as it is typically not "
"present in pre-built firmware (due to it affecting performance).  The "
"relevant configuration option is *MICROPY_PY_SYS_SETTRACE*."
msgstr ""

#: ../../library/sys.rst:56
msgid "Constants"
msgstr ""

#: ../../library/sys.rst:60
msgid "A mutable list of arguments the current program was started with."
msgstr ""

#: ../../library/sys.rst:64
msgid "The byte order of the system (``\"little\"`` or ``\"big\"``)."
msgstr ""

#: ../../library/sys.rst:68
msgid ""
"Object with information about the current Python implementation. For "
"MicroPython, it has following attributes:"
msgstr ""

#: ../../library/sys.rst:71
msgid "*name* - string \"micropython\""
msgstr ""

#: ../../library/sys.rst:72
msgid "*version* - tuple (major, minor, micro), e.g. (1, 7, 0)"
msgstr ""

#: ../../library/sys.rst:74
msgid ""
"This object is the recommended way to distinguish MicroPython from other "
"Python implementations (note that it still may not exist in the very "
"minimal ports)."
msgstr ""

#: ../../library/sys.rst:81
msgid ""
"CPython mandates more attributes for this object, but the actual useful "
"bare minimum is implemented in MicroPython."
msgstr ""

#: ../../library/sys.rst:86
msgid ""
"Maximum value which a native integer type can hold on the current "
"platform, or maximum value representable by MicroPython integer type, if "
"it's smaller than platform max value (that is the case for MicroPython "
"ports without long int support)."
msgstr ""

#: ../../library/sys.rst:91
msgid ""
"This attribute is useful for detecting \"bitness\" of a platform (32-bit "
"vs 64-bit, etc.). It's recommended to not compare this attribute to some "
"value directly, but instead count number of bits in it::"
msgstr ""

#: ../../library/sys.rst:111
msgid ""
"Dictionary of loaded modules. On some ports, it may not include builtin "
"modules."
msgstr ""

#: ../../library/sys.rst:116
msgid "A mutable list of directories to search for imported modules."
msgstr ""

#: ../../library/sys.rst:121
msgid ""
"On MicroPython, an entry with the value ``\".frozen\"`` will indicate "
"that import should search :term:`frozen modules <frozen module>` at that "
"point in the search. If no frozen module is found then search will *not* "
"look for a directory called ``.frozen``, instead it will continue with "
"the next entry in ``sys.path``."
msgstr ""

#: ../../library/sys.rst:128
msgid ""
"The platform that MicroPython is running on. For OS/RTOS ports, this is "
"usually an identifier of the OS, e.g. ``\"linux\"``. For baremetal ports "
"it is an identifier of a board, e.g. ``\"pyboard\"`` for the original "
"MicroPython reference board. It thus can be used to distinguish one board"
" from another. If you need to check whether your program runs on "
"MicroPython (vs other Python implementation), use `sys.implementation` "
"instead."
msgstr ""

#: ../../library/sys.rst:137
msgid "Standard error `stream`."
msgstr ""

#: ../../library/sys.rst:141
msgid "Standard input `stream`."
msgstr ""

#: ../../library/sys.rst:145
msgid "Standard output `stream`."
msgstr ""

#: ../../library/sys.rst:149
msgid "Python language version that this implementation conforms to, as a string."
msgstr ""

#: ../../library/sys.rst:153
msgid ""
"Python language version that this implementation conforms to, as a tuple "
"of ints."
msgstr ""

#: ../../library/sys.rst:158
msgid ""
"Only the first three version numbers (major, minor, micro) are supported "
"and they can be referenced only by index, not by name."
msgstr ""

