# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../library/random.rst:2
msgid ":mod:`random` -- generate random numbers"
msgstr ""

#: ../../library/random.rst:7
msgid "This module implements a pseudo-random number generator (PRNG)."
msgstr ""

#: ../../library/random.rst:9
msgid "|see_cpython_module| :mod:`python:random` ."
msgstr ""

#: ../../library/random.rst:13
msgid "The following notation is used for intervals:"
msgstr ""

#: ../../library/random.rst:15
msgid ""
"() are open interval brackets and do not include their endpoints. For "
"example, (0, 1) means greater than 0 and less than 1. In set notation: "
"(0, 1) = {x | 0 < x < 1}."
msgstr ""

#: ../../library/random.rst:19
msgid ""
"[] are closed interval brackets which include all their limit points. For"
" example, [0, 1] means greater than or equal to 0 and less than or equal "
"to 1. In set notation: [0, 1] = {x | 0 <= x <= 1}."
msgstr ""

#: ../../library/random.rst:26
msgid ""
"The :func:`randrange`, :func:`randint` and :func:`choice` functions are "
"only available if the ``MICROPY_PY_URANDOM_EXTRA_FUNCS`` configuration "
"option is enabled."
msgstr ""

#: ../../library/random.rst:32
msgid "Functions for integers"
msgstr ""

#: ../../library/random.rst:36
msgid "Return an integer with *n* random bits (0 <= n <= 32)."
msgstr ""

#: ../../library/random.rst:40
msgid "Return a random integer in the range [*a*, *b*]."
msgstr ""

#: ../../library/random.rst:46
msgid ""
"The first form returns a random integer from the range [0, *stop*). The "
"second form returns a random integer from the range [*start*, *stop*). "
"The third form returns a random integer from the range [*start*, *stop*) "
"in steps of *step*.  For instance, calling ``randrange(1, 10, 2)`` will "
"return odd numbers between 1 and 9 inclusive."
msgstr ""

#: ../../library/random.rst:54
msgid "Functions for floats"
msgstr ""

#: ../../library/random.rst:58
msgid "Return a random floating point number in the range [0.0, 1.0)."
msgstr ""

#: ../../library/random.rst:62
msgid ""
"Return a random floating point number N such that *a* <= N <= *b* for *a*"
" <= *b*, and *b* <= N <= *a* for *b* < *a*."
msgstr ""

#: ../../library/random.rst:67
msgid "Other Functions"
msgstr ""

#: ../../library/random.rst:71
msgid ""
"Initialise the random number generator module with the seed *n* which "
"should be an integer.  When no argument (or ``None``) is passed in it "
"will (if supported by the port) initialise the PRNG with a true random "
"number (usually a hardware generated random number)."
msgstr ""

#: ../../library/random.rst:76
msgid ""
"The ``None`` case only works if ``MICROPY_PY_URANDOM_SEED_INIT_FUNC`` is "
"enabled by the port, otherwise it raises ``ValueError``."
msgstr ""

#: ../../library/random.rst:81
msgid ""
"Chooses and returns one item at random from *sequence* (tuple, list or "
"any object that supports the subscript operation)."
msgstr ""

