# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../library/pyb.LCD.rst:5
msgid "class LCD -- LCD control for the LCD touch-sensor pyskin"
msgstr ""

#: ../../library/pyb.LCD.rst:7
msgid ""
"The LCD class is used to control the LCD on the LCD touch-sensor pyskin, "
"LCD32MKv1.0.  The LCD is a 128x32 pixel monochrome screen, part NHD-"
"C12832A1Z."
msgstr ""

#: ../../library/pyb.LCD.rst:10
msgid ""
"The pyskin must be connected in either the X or Y positions, and then an "
"LCD object is made using::"
msgstr ""

#: ../../library/pyb.LCD.rst:16
msgid "Then you can use::"
msgstr ""

#: ../../library/pyb.LCD.rst:21
msgid ""
"This driver implements a double buffer for setting/getting pixels. For "
"example, to make a bouncing dot, try::"
msgstr ""

#: ../../library/pyb.LCD.rst:42
msgid "Constructors"
msgstr ""

#: ../../library/pyb.LCD.rst:46
msgid ""
"Construct an LCD object in the given skin position.  ``skin_position`` "
"can be 'X' or 'Y', and should match the position where the LCD pyskin is "
"plugged in."
msgstr ""

#: ../../library/pyb.LCD.rst:51
msgid "Methods"
msgstr ""

#: ../../library/pyb.LCD.rst:55
msgid ""
"Send an arbitrary command to the LCD.  Pass 0 for ``instr_data`` to send "
"an instruction, otherwise pass 1 to send data.  ``buf`` is a buffer with "
"the instructions/data to send."
msgstr ""

#: ../../library/pyb.LCD.rst:61
msgid "Set the contrast of the LCD.  Valid values are between 0 and 47."
msgstr ""

#: ../../library/pyb.LCD.rst:65
msgid "Fill the screen with the given colour (0 or 1 for white or black)."
msgstr ""

#: ../../library/pyb.LCD.rst:67 ../../library/pyb.LCD.rst:83
#: ../../library/pyb.LCD.rst:93
msgid ""
"This method writes to the hidden buffer.  Use ``show()`` to show the "
"buffer."
msgstr ""

#: ../../library/pyb.LCD.rst:71
msgid "Get the pixel at the position ``(x, y)``.  Returns 0 or 1."
msgstr ""

#: ../../library/pyb.LCD.rst:73
msgid "This method reads from the visible buffer."
msgstr ""

#: ../../library/pyb.LCD.rst:77
msgid ""
"Turn the backlight on/off.  True or 1 turns it on, False or 0 turns it "
"off."
msgstr ""

#: ../../library/pyb.LCD.rst:81
msgid "Set the pixel at ``(x, y)`` to the given colour (0 or 1)."
msgstr ""

#: ../../library/pyb.LCD.rst:87
msgid "Show the hidden buffer on the screen."
msgstr ""

#: ../../library/pyb.LCD.rst:91
msgid ""
"Draw the given text to the position ``(x, y)`` using the given colour (0 "
"or 1)."
msgstr ""

#: ../../library/pyb.LCD.rst:97
msgid "Write the string ``str`` to the screen.  It will appear immediately."
msgstr ""

