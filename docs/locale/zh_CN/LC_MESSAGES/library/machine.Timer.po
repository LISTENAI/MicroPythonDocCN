# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../library/machine.Timer.rst:5
msgid "class Timer -- control hardware timers"
msgstr ""

#: ../../library/machine.Timer.rst:7
msgid ""
"Hardware timers deal with timing of periods and events. Timers are "
"perhaps the most flexible and heterogeneous kind of hardware in MCUs and "
"SoCs, differently greatly from a model to a model. MicroPython's Timer "
"class defines a baseline operation of executing a callback with a given "
"period (or once after some delay), and allow specific boards to define "
"more non-standard behaviour (which thus won't be portable to other "
"boards)."
msgstr ""

#: ../../library/machine.Timer.rst:14
msgid ""
"See discussion of :ref:`important constraints <machine_callbacks>` on "
"Timer callbacks."
msgstr ""

#: ../../library/machine.Timer.rst:19
msgid ""
"Memory can't be allocated inside irq handlers (an interrupt) and so "
"exceptions raised within a handler don't give much information.  See "
":func:`micropython.alloc_emergency_exception_buf` for how to get around "
"this limitation."
msgstr ""

#: ../../library/machine.Timer.rst:24
msgid ""
"If you are using a WiPy board please refer to :ref:`machine.TimerWiPy "
"<machine.TimerWiPy>` instead of this class."
msgstr ""

#: ../../library/machine.Timer.rst:28
msgid "Constructors"
msgstr ""

#: ../../library/machine.Timer.rst:32
msgid ""
"Construct a new timer object of the given ``id``. ``id`` of -1 constructs"
" a virtual timer (if supported by a board). ``id`` shall not be passed as"
" a keyword argument."
msgstr ""

#: ../../library/machine.Timer.rst:36
msgid "See ``init`` for parameters of initialisation."
msgstr ""

#: ../../library/machine.Timer.rst:39
msgid "Methods"
msgstr ""

#: ../../library/machine.Timer.rst:43
msgid "Initialise the timer. Example::"
msgstr ""

#: ../../library/machine.Timer.rst:54
msgid "Keyword arguments:"
msgstr ""

#: ../../library/machine.Timer.rst:56
msgid "``mode`` can be one of:"
msgstr ""

#: ../../library/machine.Timer.rst:58
msgid ""
"``Timer.ONE_SHOT`` - The timer runs once until the configured period of "
"the channel expires."
msgstr ""

#: ../../library/machine.Timer.rst:60
msgid ""
"``Timer.PERIODIC`` - The timer runs periodically at the configured "
"frequency of the channel."
msgstr ""

#: ../../library/machine.Timer.rst:63
msgid "``period`` - The timer period, in milliseconds."
msgstr ""

#: ../../library/machine.Timer.rst:65
msgid ""
"``callback`` - The callable to call upon expiration of the timer period. "
"The callback must take one argument, which is passed the Timer object. "
"The ``callback`` argument shall be specified. Otherwise an exception will"
" occurr upon timer expiration: ``TypeError: 'NoneType' object isn't "
"callable``"
msgstr ""

#: ../../library/machine.Timer.rst:73
msgid ""
"Deinitialises the timer. Stops the timer, and disables the timer "
"peripheral."
msgstr ""

#: ../../library/machine.Timer.rst:76
msgid "Constants"
msgstr ""

#: ../../library/machine.Timer.rst:81
msgid "Timer operating mode."
msgstr ""

