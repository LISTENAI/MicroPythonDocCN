# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../library/rp2.Flash.rst:5
msgid "class Flash -- access to built-in flash storage"
msgstr ""

#: ../../library/rp2.Flash.rst:7
msgid "This class gives access to the SPI flash memory."
msgstr ""

#: ../../library/rp2.Flash.rst:9
msgid ""
"In most cases, to store persistent data on the device, you'll want to use"
" a higher-level abstraction, for example the filesystem via Python's "
"standard file API, but this interface is useful to :ref:`customise the "
"filesystem configuration <filesystem>` or implement a low-level storage "
"system for your application."
msgstr ""

#: ../../library/rp2.Flash.rst:17
msgid "Constructors"
msgstr ""

#: ../../library/rp2.Flash.rst:21
msgid "Gets the singleton object for accessing the SPI flash memory."
msgstr ""

#: ../../library/rp2.Flash.rst:25
msgid "Methods"
msgstr ""

#: ../../library/rp2.Flash.rst:33
msgid ""
"These methods implement the simple and extended :ref:`block protocol "
"<block-device-interface>` defined by :class:`os.AbstractBlockDev`."
msgstr ""

