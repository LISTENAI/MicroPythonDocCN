# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../library/json.rst:2
msgid ":mod:`json` -- JSON encoding and decoding"
msgstr ""

#: ../../library/json.rst:7
msgid "|see_cpython_module| :mod:`python:json`."
msgstr ""

#: ../../library/json.rst:9
msgid ""
"This modules allows to convert between Python objects and the JSON data "
"format."
msgstr ""

#: ../../library/json.rst:13
msgid "Functions"
msgstr ""

#: ../../library/json.rst:17
msgid "Serialise *obj* to a JSON string, writing it to the given *stream*."
msgstr ""

#: ../../library/json.rst:19
msgid ""
"If specified, separators should be an ``(item_separator, key_separator)``"
" tuple. The default is ``(', ', ': ')``. To get the most compact JSON "
"representation, you should specify ``(',', ':')`` to eliminate "
"whitespace."
msgstr ""

#: ../../library/json.rst:25
msgid "Return *obj* represented as a JSON string."
msgstr ""

#: ../../library/json.rst:27
msgid "The arguments have the same meaning as in `dump`."
msgstr ""

#: ../../library/json.rst:31
msgid ""
"Parse the given *stream*, interpreting it as a JSON string and "
"deserialising the data to a Python object.  The resulting object is "
"returned."
msgstr ""

#: ../../library/json.rst:35
msgid ""
"Parsing continues until end-of-file is encountered. A :exc:`ValueError` "
"is raised if the data in *stream* is not correctly formed."
msgstr ""

#: ../../library/json.rst:40
msgid ""
"Parse the JSON *str* and return an object.  Raises :exc:`ValueError` if "
"the string is not correctly formed."
msgstr ""

