# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../library/pyb.I2C.rst:5
msgid "class I2C -- a two-wire serial protocol"
msgstr ""

#: ../../library/pyb.I2C.rst:7
msgid ""
"I2C is a two-wire protocol for communicating between devices.  At the "
"physical level it consists of 2 wires: SCL and SDA, the clock and data "
"lines respectively."
msgstr ""

#: ../../library/pyb.I2C.rst:10
msgid ""
"I2C objects are created attached to a specific bus.  They can be "
"initialised when created, or initialised later on."
msgstr ""

#: ../../library/pyb.I2C.rst:13
msgid "Example::"
msgstr ""

#: ../../library/pyb.I2C.rst:23
msgid "Printing the i2c object gives you information about its configuration."
msgstr ""

#: ../../library/pyb.I2C.rst:25
msgid "The basic methods are send and recv::"
msgstr ""

#: ../../library/pyb.I2C.rst:31
msgid "To receive inplace, first create a bytearray::"
msgstr ""

#: ../../library/pyb.I2C.rst:36
msgid "You can specify a timeout (in ms)::"
msgstr ""

#: ../../library/pyb.I2C.rst:40
msgid "A controller must specify the recipient's address::"
msgstr ""

#: ../../library/pyb.I2C.rst:46
msgid "Master also has other methods::"
msgstr ""

#: ../../library/pyb.I2C.rst:57
msgid "Constructors"
msgstr ""

#: ../../library/pyb.I2C.rst:61
msgid ""
"Construct an I2C object on the given bus.  ``bus`` can be 1 or 2, 'X' or "
"'Y'. With no additional parameters, the I2C object is created but not "
"initialised (it has the settings from the last initialisation of the bus,"
" if any).  If extra arguments are given, the bus is initialised. See "
"``init`` for parameters of initialisation."
msgstr ""

#: ../../library/pyb.I2C.rst:67
msgid "The physical pins of the I2C buses on Pyboards V1.0 and V1.1 are:"
msgstr ""

#: ../../library/pyb.I2C.rst:69 ../../library/pyb.I2C.rst:74
msgid "``I2C(1)`` is on the X position: ``(SCL, SDA) = (X9, X10) = (PB6, PB7)``"
msgstr ""

#: ../../library/pyb.I2C.rst:70
msgid "``I2C(2)`` is on the Y position: ``(SCL, SDA) = (Y9, Y10) = (PB10, PB11)``"
msgstr ""

#: ../../library/pyb.I2C.rst:72
msgid "On the Pyboard Lite:"
msgstr ""

#: ../../library/pyb.I2C.rst:75
msgid "``I2C(3)`` is on the Y position: ``(SCL, SDA) = (Y9, Y10) = (PA8, PB8)``"
msgstr ""

#: ../../library/pyb.I2C.rst:77
msgid ""
"Calling the constructor with 'X' or 'Y' enables portability between "
"Pyboard types."
msgstr ""

#: ../../library/pyb.I2C.rst:81
msgid "Methods"
msgstr ""

#: ../../library/pyb.I2C.rst:85
msgid "Turn off the I2C bus."
msgstr ""

#: ../../library/pyb.I2C.rst:89
msgid "Initialise the I2C bus with the given parameters:"
msgstr ""

#: ../../library/pyb.I2C.rst:91
msgid "``mode`` must be either ``I2C.CONTROLLER`` or ``I2C.PERIPHERAL``"
msgstr ""

#: ../../library/pyb.I2C.rst:92
msgid "``addr`` is the 7-bit address (only sensible for a peripheral)"
msgstr ""

#: ../../library/pyb.I2C.rst:93
msgid "``baudrate`` is the SCL clock rate (only sensible for a controller)"
msgstr ""

#: ../../library/pyb.I2C.rst:94
msgid "``gencall`` is whether to support general call mode"
msgstr ""

#: ../../library/pyb.I2C.rst:95
msgid ""
"``dma`` is whether to allow the use of DMA for the I2C transfers (note "
"that DMA transfers have more precise timing but currently do not handle "
"bus errors properly)"
msgstr ""

#: ../../library/pyb.I2C.rst:101
msgid ""
"Check if an I2C device responds to the given address.  Only valid when in"
" controller mode."
msgstr ""

#: ../../library/pyb.I2C.rst:105
msgid "Read from the memory of an I2C device:"
msgstr ""

#: ../../library/pyb.I2C.rst:107
msgid ""
"``data`` can be an integer (number of bytes to read) or a buffer to read "
"into"
msgstr ""

#: ../../library/pyb.I2C.rst:108 ../../library/pyb.I2C.rst:121
msgid "``addr`` is the I2C device address"
msgstr ""

#: ../../library/pyb.I2C.rst:109 ../../library/pyb.I2C.rst:122
msgid "``memaddr`` is the memory location within the I2C device"
msgstr ""

#: ../../library/pyb.I2C.rst:110
msgid "``timeout`` is the timeout in milliseconds to wait for the read"
msgstr ""

#: ../../library/pyb.I2C.rst:111 ../../library/pyb.I2C.rst:124
msgid "``addr_size`` selects width of memaddr: 8 or 16 bits"
msgstr ""

#: ../../library/pyb.I2C.rst:113
msgid "Returns the read data. This is only valid in controller mode."
msgstr ""

#: ../../library/pyb.I2C.rst:118
msgid "Write to the memory of an I2C device:"
msgstr ""

#: ../../library/pyb.I2C.rst:120
msgid "``data`` can be an integer or a buffer to write from"
msgstr ""

#: ../../library/pyb.I2C.rst:123
msgid "``timeout`` is the timeout in milliseconds to wait for the write"
msgstr ""

#: ../../library/pyb.I2C.rst:126
msgid "Returns ``None``. This is only valid in controller mode."
msgstr ""

#: ../../library/pyb.I2C.rst:131
msgid "Receive data on the bus:"
msgstr ""

#: ../../library/pyb.I2C.rst:133
msgid ""
"``recv`` can be an integer, which is the number of bytes to receive, or a"
" mutable buffer, which will be filled with received bytes"
msgstr ""

#: ../../library/pyb.I2C.rst:135
msgid "``addr`` is the address to receive from (only required in controller mode)"
msgstr ""

#: ../../library/pyb.I2C.rst:136
msgid "``timeout`` is the timeout in milliseconds to wait for the receive"
msgstr ""

#: ../../library/pyb.I2C.rst:138
msgid ""
"Return value: if ``recv`` is an integer then a new buffer of the bytes "
"received, otherwise the same buffer that was passed in to ``recv``."
msgstr ""

#: ../../library/pyb.I2C.rst:143
msgid "Send data on the bus:"
msgstr ""

#: ../../library/pyb.I2C.rst:145
msgid "``send`` is the data to send (an integer to send, or a buffer object)"
msgstr ""

#: ../../library/pyb.I2C.rst:146
msgid "``addr`` is the address to send to (only required in controller mode)"
msgstr ""

#: ../../library/pyb.I2C.rst:147
msgid "``timeout`` is the timeout in milliseconds to wait for the send"
msgstr ""

#: ../../library/pyb.I2C.rst:149
msgid "Return value: ``None``."
msgstr ""

#: ../../library/pyb.I2C.rst:153
msgid ""
"Scan all I2C addresses from 0x01 to 0x7f and return a list of those that "
"respond. Only valid when in controller mode."
msgstr ""

#: ../../library/pyb.I2C.rst:157
msgid "Constants"
msgstr ""

#: ../../library/pyb.I2C.rst:161
msgid "for initialising the bus to controller mode"
msgstr ""

#: ../../library/pyb.I2C.rst:165
msgid "for initialising the bus to peripheral mode"
msgstr ""

