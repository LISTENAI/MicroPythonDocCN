# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../zephyr/tutorial/storage.rst:4
msgid "Filesystems and Storage"
msgstr ""

#: ../../zephyr/tutorial/storage.rst:6
msgid ""
"Storage modules support virtual filesystem with FAT and littlefs formats,"
" backed by either Zephyr DiskAccess or FlashArea (flash map) APIs "
"depending on which the board supports."
msgstr ""

#: ../../zephyr/tutorial/storage.rst:9
msgid ""
"See `os Filesystem Mounting "
"<https://docs.micropython.org/en/latest/library/os.html?highlight=os"
"#filesystem-mounting>`_."
msgstr ""

#: ../../zephyr/tutorial/storage.rst:12
msgid "Disk Access"
msgstr ""

#: ../../zephyr/tutorial/storage.rst:14
msgid ""
"The :ref:`zephyr.DiskAccess <zephyr.DiskAccess>` class can be used to "
"access storage devices, such as SD cards. This class uses `Zephyr Disk "
"Access API "
"<https://docs.zephyrproject.org/latest/reference/storage/disk/access.html>`_"
" and implements the `os.AbstractBlockDev` protocol."
msgstr ""

#: ../../zephyr/tutorial/storage.rst:18
msgid ""
"For use with SD card controllers, SD cards must be present at boot & not "
"removed; they will be auto detected and initialized by filesystem at "
"boot. Use the disk driver interface and a file system to access SD cards "
"via disk access (see below)."
msgstr ""

#: ../../zephyr/tutorial/storage.rst:22
msgid "Example usage of FatFS with an SD card on the mimxrt1050_evk board::"
msgstr ""

#: ../../zephyr/tutorial/storage.rst:35
msgid "Flash Area"
msgstr ""

#: ../../zephyr/tutorial/storage.rst:37
msgid ""
"The :ref:`zephyr.FlashArea <zephyr.FlashArea>` class can be used to "
"implement a low-level storage system or customize filesystem "
"configurations. To store persistent data on the device, using a higher-"
"level filesystem API is recommended (see below)."
msgstr ""

#: ../../zephyr/tutorial/storage.rst:41
msgid ""
"This class uses `Zephyr Flash map API "
"<https://docs.zephyrproject.org/latest/reference/storage/flash_map/flash_map.html#>`_"
" and implements the `os.AbstractBlockDev` protocol."
msgstr ""

#: ../../zephyr/tutorial/storage.rst:44
msgid ""
"Example usage with the internal flash on the reel_board or the "
"rv32m1_vega_ri5cy board::"
msgstr ""

#: ../../zephyr/tutorial/storage.rst:55
msgid ""
"For boards such as the frdm_k64f in which the MicroPython application "
"spills into the default flash storage partition, use the scratch "
"partition by replacing ``FlashArea.STORAGE`` with the integer value 4."
msgstr ""

