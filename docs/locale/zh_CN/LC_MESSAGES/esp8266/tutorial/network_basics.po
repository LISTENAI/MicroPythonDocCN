# SOME DESCRIPTIVE TITLE.
# Copyright (C) - The MicroPython Documentation is Copyright Â© 2014-2022,
# Damien P. George, Paul Sokolovsky, and contributors
# This file is distributed under the same license as the MicroPython
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MicroPython 1.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-10 14:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../esp8266/tutorial/network_basics.rst:2
msgid "Network basics"
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:4
msgid ""
"The network module is used to configure the WiFi connection.  There are "
"two WiFi interfaces, one for the station (when the ESP8266 connects to a "
"router) and one for the access point (for other devices to connect to the"
" ESP8266).  Create instances of these objects using::"
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:13
msgid "You can check if the interfaces are active by::"
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:20
msgid "You can also check the network settings of the interface by::"
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:25
msgid "The returned values are: IP address, netmask, gateway, DNS."
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:28
msgid "Configuration of the WiFi"
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:30
msgid ""
"Upon a fresh install the ESP8266 is configured in access point mode, so "
"the AP_IF interface is active and the STA_IF interface is inactive.  You "
"can configure the module to connect to your own network using the STA_IF "
"interface."
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:34
msgid "First activate the station interface::"
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:38
msgid "Then connect to your WiFi network::"
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:42
msgid "To check if the connection is established use::"
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:46
msgid "Once established you can check the IP address::"
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:51
msgid "You can then disable the access-point interface if you no longer need it::"
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:55
msgid ""
"Here is a function you can run (or put in your boot.py file) to "
"automatically connect to your WiFi network::"
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:70
msgid "Sockets"
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:72
msgid ""
"Once the WiFi is set up the way to access the network is by using "
"sockets. A socket represents an endpoint on a network device, and when "
"two sockets are connected together communication can proceed. Internet "
"protocols are built on top of sockets, such as email (SMTP), the web "
"(HTTP), telnet, ssh, among many others.  Each of these protocols is "
"assigned a specific port, which is just an integer.  Given an IP address "
"and a port number you can connect to a remote device and start talking "
"with it."
msgstr ""

#: ../../esp8266/tutorial/network_basics.rst:80
msgid ""
"The next part of the tutorial discusses how to use sockets to do some "
"common and useful network tasks."
msgstr ""

